// /*
//  * This Java source file was generated by the Gradle 'init' task.
//  */
package gradle;

import javax.naming.spi.DirStateFactory.Result;

import org.checkerframework.checker.units.qual.g;

import javafx.application.Application;
import javafx.geometry.HPos;
import javafx.geometry.Insets;
import javafx.geometry.Orientation;
import javafx.geometry.Pos;
import javafx.geometry.VPos;
import javafx.scene.Scene;
import javafx.scene.control.Button;
import javafx.scene.control.TextField;
import javafx.scene.image.Image;
import javafx.scene.image.ImageView;
import javafx.scene.input.KeyCode;
import javafx.scene.input.KeyEvent;
import javafx.scene.layout.AnchorPane;
import javafx.scene.layout.Background;
import javafx.scene.layout.BackgroundFill;
import javafx.scene.layout.BorderPane;
import javafx.scene.layout.CornerRadii;
import javafx.scene.layout.FlowPane;
import javafx.scene.layout.GridPane;
import javafx.scene.layout.HBox;
import javafx.scene.layout.Pane;
import javafx.scene.layout.StackPane;
import javafx.scene.layout.TilePane;
import javafx.scene.layout.VBox;
import javafx.scene.paint.Color;
import javafx.scene.text.Font;
import javafx.scene.text.FontWeight;
import javafx.scene.text.Text;
import javafx.stage.Stage;

public class App extends Application {
    private Stage stage;

    @Override
    public void start(Stage primaryStage) throws Exception {
        stage = primaryStage;
        showFirstScene();

        primaryStage.setTitle("Kalkulator Sederhana");
    }

    private void showFirstScene() {

        
    ImageView imageView = new ImageView("/logo.png");
    imageView.setFitWidth(100);
    imageView.setFitHeight(100);
    imageView.setPreserveRatio(true);


        Text namaKalkulator = new Text("KALKULATOR SEDERHANA");
        namaKalkulator.setFill(Color.WHITE);
        Font boldFont = Font.font("Helvetica", FontWeight.BOLD, 20);
        namaKalkulator.setFont(boldFont);

        Button button = new Button("Mulai");
        button.setOnAction(e -> showSecondScene());
        button.setMinWidth(150);
        // button.setStyle("-fx-background-radius: 0");
        button.setStyle("-fx-background-color: #FFD700");
        Font tebalFont = Font.font("Helvetica", FontWeight.BOLD, 20);
        button.setFont(tebalFont);
        button.setTextFill(Color.WHITE);

        VBox layout = new VBox(20);
        layout.setStyle("-fx-background-color: black;");
        layout.setPadding(new Insets(20));
        layout.setAlignment(Pos.CENTER);
        layout.getChildren().addAll(imageView,namaKalkulator,button);

        Scene scene1 = new Scene(layout, 400, 700);
        stage.setScene(scene1);
        stage.show();
    }

    private void showSecondScene() {
        Text jenisKalkulator = new Text("MENU");
        jenisKalkulator.setFill(Color.WHITE);
        Font boldFont = Font.font("Helvetica", FontWeight.BOLD, 20);
        jenisKalkulator.setFont(boldFont);

        Button button1 = new Button("KALKULATOR 1");
        button1.setMinWidth(150);
        button1.setStyle("-fx-background-color: white");
        Font tebalFont = Font.font("Helvetica", FontWeight.BOLD, 20);
        button1.setFont(tebalFont);
        button1.setTextFill(Color.BLACK);

        button1.setOnAction(e -> showPerkalianScene());

        Button button2 = new Button("KALKULATOR 2");
        button2.setMinWidth(150);
        button2.setStyle("-fx-background-color: white");
        Font tebal2Font = Font.font("Helvetica", FontWeight.BOLD, 20);
        button2.setFont(tebal2Font);
        button2.setTextFill(Color.BLACK);

        button2.setOnAction(e -> showKonversiScene());

        VBox layout = new VBox(20);
        layout.setStyle("-fx-background-color: black;");
        layout.setPadding(new Insets(20));
        layout.setAlignment(Pos.CENTER);

        layout.getChildren().addAll(jenisKalkulator, button1, button2);

        Scene scene2 = new Scene(layout, 400, 700);
        stage.setScene(scene2);
        stage.show();

    }

    private Text textResult;

    private void showPerkalianScene() {
        Text kalkulatorPerkalian = new Text("PERKALIAN");
        kalkulatorPerkalian.setFill(Color.WHITE);
        Font boldFont = Font.font("Helvetica", FontWeight.BOLD, 20);
        kalkulatorPerkalian.setFont(boldFont);
        Text textHasil = new Text("Hasil :");
        textHasil.setFill(Color.WHITE);
        Font boldFont1 = Font.font("Helvetica", FontWeight.BOLD, 20);
        textHasil.setFont(boldFont1);
        textHasil.setFill(Color.WHITE);

        TextField textField = new TextField();
        TextField textField2 = new TextField();
        textField.setPrefHeight(50);
        textField2.setPrefHeight(50);
        textField.setPrefWidth(300);
        textField2.setPrefWidth(300);

        VBox layout1 = new VBox(20);
        layout1.setStyle("-fx-background-color: black;");
        layout1.setPadding(new Insets(20));
        layout1.setAlignment(Pos.CENTER);
        layout1.getChildren().addAll(textField, textField2);

        Button calculate = new Button("CALCULATE");
        calculate.setMinWidth(150);
        calculate.setStyle("-fx-background-color: #FFD700");
        Font tebal2Font = Font.font("Helvetica", FontWeight.BOLD, 20);
        calculate.setFont(tebal2Font);
        calculate.setTextFill(Color.WHITE);
        calculate.setOnAction(e -> {
            try {
                double input1 = Double.parseDouble(textField.getText());
                double input2 = Double.parseDouble(textField2.getText());
                int result = (int) (input1 * input2);

                textResult.setText("" + result);
            } catch (NumberFormatException ex) {
                // Tangkap kesalahan jika input tidak valid
                textResult.setText("Input tidak valid");
            }

        });

        Button clearButton = new Button("Clear");
        clearButton.setMinWidth(130);
        clearButton.setStyle("-fx-background-color: #808080");
        Font tebal3Font = Font.font("Helvetica", FontWeight.BOLD, 20);
        clearButton.setFont(tebal3Font);
        clearButton.setTextFill(Color.WHITE);
        clearButton.setOnAction(e -> {
            textField.clear();
            textField2.clear();
            textHasil.setText("Hasil :");
            textResult.setText("");
        });

        Button backButton = new Button("Back to Home");
        backButton.setMinWidth(300);
        backButton.setStyle("-fx-background-color: white");
        backButton.setFont(tebal2Font);
        backButton.setTextFill(Color.BLACK);
        backButton.setOnAction(e -> showSecondScene());

        HBox buttonContainer = new HBox(10);
        buttonContainer.setAlignment(Pos.TOP_CENTER);
        buttonContainer.getChildren().addAll(clearButton, calculate);

        textResult = new Text();
        textResult.setFill(Color.WHITE);
        Font boldFont2 = Font.font("Calibri", 20);
        textResult.setFont(boldFont2);
        textResult.setFill(Color.WHITE);

        VBox layout2 = new VBox(10);
        layout2.setStyle("-fx-background-color: black;");
        layout2.setPadding(new Insets(20));
        layout2.setAlignment(Pos.TOP_LEFT);
        layout2.getChildren().addAll(textHasil, textResult);

        GridPane layout = new GridPane();
        layout.setStyle("-fx-background-color: black;");
        layout.setPadding(new Insets(20));
        layout.setAlignment(Pos.CENTER);

        layout.add(kalkulatorPerkalian, 0, 0, 2, 1);
        layout.add(layout1, 0, 1);
        layout.add(layout2, 0, 2);
        layout.add(buttonContainer, 0, 3, 2, 1);
        layout.add(backButton, 0, 5, 2, 1);

        GridPane.setHalignment(kalkulatorPerkalian, HPos.CENTER);
        GridPane.setMargin(kalkulatorPerkalian, new Insets(0, 0, 20, 0));
        GridPane.setMargin(layout2, new Insets(-20, 0, 20, 0));
        GridPane.setMargin(buttonContainer, new Insets(-17, 0, 20, 0));
        GridPane.setHalignment(backButton, HPos.CENTER);
        GridPane.setMargin(backButton, new Insets(0, 0, 20, 0));

        Scene scenePerkalian = new Scene(layout, 400, 700);
        stage.setScene(scenePerkalian);
        stage.show();

    }

    private Text textResult2;

    private void showKonversiScene() {
        Text kalkulatorKonversi = new Text("KONVERSI LITER KE MILILITER");
        kalkulatorKonversi.setFill(Color.WHITE);
        Font boldFont = Font.font("Helvetica", FontWeight.BOLD, 20);
        kalkulatorKonversi.setFont(boldFont);
        Text textHasil = new Text("Hasil :");
        textHasil.setFill(Color.WHITE);
        Font boldFont1 = Font.font("Helvetica", FontWeight.BOLD, 20);
        textHasil.setFont(boldFont1);
        textHasil.setFill(Color.WHITE);

        TextField textField = new TextField();
        textField.setPrefHeight(50);
        textField.setPrefWidth(300);

        VBox layout1 = new VBox(20);
        layout1.setStyle("-fx-background-color: black;");
        layout1.setPadding(new Insets(20));
        layout1.setAlignment(Pos.CENTER);
        layout1.getChildren().addAll(textField);

        Button calculate = new Button("CALCULATE");
        calculate.setMinWidth(150);
        calculate.setStyle("-fx-background-color: #FFD700");
        Font tebal2Font = Font.font("Helvetica", FontWeight.BOLD, 20);
        calculate.setFont(tebal2Font);
        calculate.setTextFill(Color.WHITE);
        calculate.setOnAction(e -> {
            try {
                Double input1 = Double.parseDouble(textField.getText());
                int result = (int) (input1 * 1000);

                textResult2.setText("" + result + " Mililiter");
            } catch (NumberFormatException ex) {
                textResult2.setText("Inputan Tidak Valid");
            }

        });

        Button clearButton = new Button("Clear");
        clearButton.setMinWidth(130);
        clearButton.setStyle("-fx-background-color: #808080");
        Font tebal3Font = Font.font("Helvetica", FontWeight.BOLD, 20);
        clearButton.setFont(tebal3Font);
        clearButton.setTextFill(Color.WHITE);
        clearButton.setOnAction(e -> {
            textField.clear();
            textHasil.setText("Hasil :");
            textResult2.setText("");
        });

        Button backButton = new Button("Back to Home");
        backButton.setMinWidth(300);
        backButton.setStyle("-fx-background-color: white");
        backButton.setFont(tebal2Font);
        backButton.setTextFill(Color.BLACK);
        backButton.setOnAction(e -> showSecondScene());

        HBox buttonContainer = new HBox(10);
        buttonContainer.setAlignment(Pos.TOP_CENTER);
        buttonContainer.getChildren().addAll(clearButton, calculate);

        textResult2 = new Text();
        textResult2.setFill(Color.WHITE);
        Font boldFont2 = Font.font("Calibri", 20);
        textResult2.setFont(boldFont2);
        textResult2.setFill(Color.WHITE);

        VBox layout2 = new VBox(10);
        layout2.setStyle("-fx-background-color: black;");
        layout2.setPadding(new Insets(20));
        layout2.setAlignment(Pos.TOP_LEFT);
        layout2.getChildren().addAll(textHasil, textResult2);

        GridPane layout = new GridPane();
        layout.setStyle("-fx-background-color: black;");
        layout.setPadding(new Insets(20));
        layout.setAlignment(Pos.CENTER);

        layout.add(kalkulatorKonversi, 0, 0, 2, 1);
        layout.add(layout1, 0, 1);
        layout.add(layout2, 0, 2);
        layout.add(buttonContainer, 0, 3, 2, 1);
        layout.add(backButton, 0, 5, 2, 1);

        GridPane.setHalignment(kalkulatorKonversi, HPos.CENTER);
        GridPane.setMargin(kalkulatorKonversi, new Insets(0, 0, 20, 0));
        GridPane.setMargin(layout2, new Insets(-20, 0, 20, 0));
        GridPane.setMargin(buttonContainer, new Insets(-17, 0, 20, 0));
        GridPane.setHalignment(backButton, HPos.CENTER);
        GridPane.setMargin(backButton, new Insets(0, 0, 20, 0));

        Scene scenePerkalian = new Scene(layout, 400, 700);
        stage.setScene(scenePerkalian);
        stage.show();

    }

    public static void main(String[] args) {
        launch(args);

    }
}
